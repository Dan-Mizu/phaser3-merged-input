!function(e,t){"object"==typeof exports&&"object"==typeof module?module.exports=t():"function"==typeof define&&define.amd?define("MergedInput",[],t):"object"==typeof exports?exports.MergedInput=t():e.MergedInput=t()}(window,function(){return r={},i.m=n=[function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var v=function(e,t){if(Array.isArray(e))return e;if(Symbol.iterator in Object(e))return function(e,t){var n=[],r=!0,i=!1,a=void 0;try{for(var o,s=e[Symbol.iterator]();!(r=(o=s.next()).done)&&(n.push(o.value),!t||n.length!==t);r=!0);}catch(e){i=!0,a=e}finally{try{!r&&s.return&&s.return()}finally{if(i)throw a}}return n}(e,t);throw new TypeError("Invalid attempt to destructure non-iterable instance")},r=function(e,t,n){return t&&i(e.prototype,t),n&&i(e,n),e};function i(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var a=(function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(o,Phaser.Plugins.ScenePlugin),r(o,[{key:"boot",value:function(){this.eventEmitter=this.systems.events,this.eventEmitter.on("update",this.update,this),void 0!==this.systems.input.gamepad&&(this.systems.input.gamepad.once("connected",function(e){e.on("down",this.gamepadButtonDown,this),e.on("up",this.gamepadButtonUp,this),this.eventEmitter.emit("mergedInput",{device:"gamepad",id:e.id,player:e.index,action:"Connected"}),void 0===this.players[e.index]&&this.addPlayer(),this.players[e.index].gamepad=e},this),this.gamepads=this.systems.input.gamepad.gamepads),this.systems.input.keyboard.on("keydown",function(t){var e=Object.keys(Phaser.Input.Keyboard.KeyCodes).find(function(e){return Phaser.Input.Keyboard.KeyCodes[e]===t.keyCode}),n=this.getPlayerIndexFromKey(e);-1<n&&(this.getPlayer(n).interaction.device="keyboard")},this),this.systems.input.keyboard.on("keyup",function(){var e=Object.keys(Phaser.Input.Keyboard.KeyCodes).find(function(e){return Phaser.Input.Keyboard.KeyCodes[e]===event.keyCode}),t=this.getPlayerIndexFromKey(e);-1<t&&(this.getPlayer(t).interaction.device="keyboard")},this)}},{key:"update",value:function(){var e=!0,t=!1,n=void 0;try{for(var r,i=this.players[Symbol.iterator]();!(e=(r=i.next()).done);e=!0){var a=r.value;""==a.interaction.buffer&&(a.interaction.pressed=""),""!=a.interaction.pressed&&(a.interaction.buffer="")}}catch(e){t=!0,n=e}finally{try{!e&&i.return&&i.return()}finally{if(t)throw n}}this.checkKeyboardInput(),this.checkGamepadInput()}},{key:"addPlayer",value:function(){return this.players.push(this.setupControls()),this.players[this.players.length-1].index=this.players.length-1,this.players[this.players.length-1]}},{key:"getPlayer",value:function(e){return void 0!==this.players[e]?this.players[e]:""}},{key:"getPlayerIndexFromKey",value:function(e){var t=!0,n=!1,r=void 0;try{for(var i,a=this.players[Symbol.iterator]();!(t=(i=a.next()).done);t=!0){var o=i.value;for(var s in o.keys){var d=!0,u=!1,l=void 0;try{for(var y,p=o.keys[s][Symbol.iterator]();!(d=(y=p.next()).done);d=!0)if(y.value==e)return o.index}catch(e){u=!0,l=e}finally{try{!d&&p.return&&p.return()}finally{if(u)throw l}}}}}catch(e){n=!0,r=e}finally{try{!t&&a.return&&a.return()}finally{if(n)throw r}}return-1}},{key:"setupControls",value:function(){for(var e={direction:{UP:0,DOWN:0,LEFT:0,RIGHT:0},buttons:{},interaction:{},gamepad:{},keys:{UP:[],DOWN:[],LEFT:[],RIGHT:[]}},t=1;t<=16;t++)e.buttons["B"+t]=0,e.keys["B"+t]=[];return e.interaction.buffer="",e.interaction.pressed="",e.interaction.last="",e.interaction.device="",e}},{key:"defineKey",value:function(e,t,n,r){var i=0<arguments.length&&void 0!==e?e:0,a=t,o=n,s=3<arguments.length&&void 0!==r&&r;return void 0===this.players[i]&&this.addPlayer(),["UP","DOWN","LEFT","RIGHT","B0","B1","B2","B3","B4","B5","B6","B7","B8","B9","B10","B11","B12","B13","B14","B15","B16"].includes(a)&&(s||(this.players[i].keys[a]=[]),this.players[i].keys[a].push([o]),this.keys[[o]]=this.systems.input.keyboard.addKey(Phaser.Input.Keyboard.KeyCodes[o])),this}},{key:"checkKeyboardInput",value:function(){var e=!0,t=!1,n=void 0;try{for(var r,i=this.players.entries()[Symbol.iterator]();!(e=(r=i.next()).done);e=!0){var a=v(r.value,2),o=a[0],s=a[1];for(var d in s.keys){var u=0,l=!0,y=!1,p=void 0;try{for(var c,f=s.keys[d][Symbol.iterator]();!(l=(c=f.next()).done);l=!0){var h=c.value;u=this.keys[h].isDown?1:u,Phaser.Input.Keyboard.JustDown(this.keys[h])&&(this.eventEmitter.emit("mergedInput",{device:"keyboard",value:1,player:o,action:d,state:"DOWN"}),s.interaction.pressed=d,s.interaction.buffer=d,s.interaction.last=d),Phaser.Input.Keyboard.JustUp(this.keys[h])&&this.eventEmitter.emit("mergedInput",{device:"keyboard",value:1,player:o,action:d,state:"UP"})}}catch(e){y=!0,p=e}finally{try{!l&&f.return&&f.return()}finally{if(y)throw p}}["UP","DOWN","LEFT","RIGHT"].includes(d)?s.direction[d]=u:s.buttons[d]=u,1==u&&(s.interaction.device="keyboard")}}}catch(e){t=!0,n=e}finally{try{!e&&i.return&&i.return()}finally{if(t)throw n}}}},{key:"gamepadButtonDown",value:function(e,t,n){this.players[n.pad.index].interaction.device="gamepad",this.eventEmitter.emit("mergedInput",{device:"gamepad",value:t,player:n.pad.index,action:"B"+e,state:"DOWN"}),12===e&&this.eventEmitter.emit("mergedInput",{device:"gamepad",value:1,player:n.pad.index,action:"UP",state:"DOWN"}),13===e&&this.eventEmitter.emit("mergedInput",{device:"gamepad",value:1,player:n.pad.index,action:"DOWN",state:"DOWN"}),14===e&&this.eventEmitter.emit("mergedInput",{device:"gamepad",value:1,player:n.pad.index,action:"LEFT",state:"DOWN"}),15===e&&this.eventEmitter.emit("mergedInput",{device:"gamepad",value:1,player:n.pad.index,action:"RIGHT",state:"DOWN"}),[12,13,14,15].includes(e)||(this.players[n.pad.index].interaction.pressed="B"+e,this.players[n.pad.index].interaction.last="B"+e,this.players[n.pad.index].interaction.buffer="B"+e)}},{key:"gamepadButtonUp",value:function(e,t,n){this.players[n.pad.index].interaction.device="gamepad",this.eventEmitter.emit("mergedInput",{device:"gamepad",value:t,player:n.pad.index,action:"B"+e,state:"UP"}),12===e&&this.eventEmitter.emit("mergedInput",{device:"gamepad",value:1,player:n.pad.index,action:"UP"+e,state:"UP"}),13===e&&this.eventEmitter.emit("mergedInput",{device:"gamepad",value:1,player:n.pad.index,action:"DOWN"+e,state:"UP"}),14===e&&this.eventEmitter.emit("mergedInput",{device:"gamepad",value:1,player:n.pad.index,action:"LEFT"+e,state:"UP"}),15===e&&this.eventEmitter.emit("mergedInput",{device:"gamepad",value:1,player:n.pad.index,action:"RIGHT"+e,state:"UP"})}},{key:"checkGamepadInput",value:function(){var e=!0,t=!1,n=void 0;try{for(var r,i=this.gamepads[Symbol.iterator]();!(e=(r=i.next()).done);e=!0){var a=r.value;if(a.leftStick.y<-.5?this.players[a.index].direction.UP=Math.abs(a.leftStick.y):.5<a.leftStick.y?this.players[a.index].direction.DOWN=a.leftStick.y:"gamepad"===this.players[a.index].interaction.device&&(this.players[a.index].direction.UP=a.up?1:0,this.players[a.index].direction.DOWN=a.down?1:0),a.leftStick.x<-.5?this.players[a.index].direction.LEFT=Math.abs(a.leftStick.x):.5<a.leftStick.x?this.players[a.index].direction.RIGHT=a.leftStick.x:"gamepad"===this.players[a.index].interaction.device&&(this.players[a.index].direction.LEFT=a.left?1:0,this.players[a.index].direction.RIGHT=a.right?1:0),"gamepad"===this.players[a.index].interaction.device)for(var o=0;o<a.buttons.length;o++){var s=a.buttons[o];this.players[a.index].buttons["B"+o]=s.value}}}catch(e){t=!0,n=e}finally{try{!e&&i.return&&i.return()}finally{if(t)throw n}}}},{key:"destroy",value:function(){this.shutdown(),this.scene=void 0}},{key:"debug",value:function(){var e={input:{}};e.input.gamepads=[];for(var t=0;t<this.gamepads.length;t++){for(var n=this.gamepads[t],r={},i={},a=0;a<n.buttons.length;a++){var o=n.buttons[a];r["B"+o.index]=o.value}for(var s=0;s<n.axes.length;s++){var d=n.axes[s];i["A"+d.index]=d.getValue()}e.input.gamepads.push({ID:n.id,Index:n.index,Buttons:r,Axes:i})}var u=!0,l=!(e.players=[]),y=void 0;try{for(var p,c=this.players[Symbol.iterator]();!(u=(p=c.next()).done);u=!0){var f=p.value;e.players.push({interaction:f.interaction,device:f.device,buttons:f.buttons,keys:f.keys})}}catch(e){l=!0,y=e}finally{try{!u&&c.return&&c.return()}finally{if(l)throw y}}return e}}]),o);function o(e,t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,o);var n=function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(o.__proto__||Object.getPrototypeOf(o)).call(this,e,t));return n.scene=e,n.players=[],n.gamepads=[],n.keys={},n}t.default=a}],i.c=r,i.d=function(e,t,n){i.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:n})},i.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},i.t=function(t,e){if(1&e&&(t=i(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var n=Object.create(null);if(i.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var r in t)i.d(n,r,function(e){return t[e]}.bind(null,r));return n},i.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return i.d(t,"a",t),t},i.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},i.p="",i(i.s=0);function i(e){if(r[e])return r[e].exports;var t=r[e]={i:e,l:!1,exports:{}};return n[e].call(t.exports,t,t.exports,i),t.l=!0,t.exports}var n,r});
//# sourceMappingURL=MergedInput.min.map